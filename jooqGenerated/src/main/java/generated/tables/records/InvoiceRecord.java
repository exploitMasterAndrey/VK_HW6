/*
 * This file is generated by jOOQ.
 */
package generated.tables.records;


import generated.tables.Invoice;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvoiceRecord extends UpdatableRecordImpl<InvoiceRecord> implements Record3<Integer, LocalDateTime, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.invoice.num</code>.
     */
    public InvoiceRecord setNum(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice.num</code>.
     */
    public Integer getNum() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.invoice.creation_date</code>.
     */
    public InvoiceRecord setCreationDate(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice.creation_date</code>.
     */
    public LocalDateTime getCreationDate() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.invoice.organization_inn</code>.
     */
    public InvoiceRecord setOrganizationInn(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice.organization_inn</code>.
     */
    public Long getOrganizationInn() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, LocalDateTime, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, LocalDateTime, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Invoice.INVOICE.NUM;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Invoice.INVOICE.CREATION_DATE;
    }

    @Override
    public Field<Long> field3() {
        return Invoice.INVOICE.ORGANIZATION_INN;
    }

    @Override
    public Integer component1() {
        return getNum();
    }

    @Override
    public LocalDateTime component2() {
        return getCreationDate();
    }

    @Override
    public Long component3() {
        return getOrganizationInn();
    }

    @Override
    public Integer value1() {
        return getNum();
    }

    @Override
    public LocalDateTime value2() {
        return getCreationDate();
    }

    @Override
    public Long value3() {
        return getOrganizationInn();
    }

    @Override
    public InvoiceRecord value1(Integer value) {
        setNum(value);
        return this;
    }

    @Override
    public InvoiceRecord value2(LocalDateTime value) {
        setCreationDate(value);
        return this;
    }

    @Override
    public InvoiceRecord value3(Long value) {
        setOrganizationInn(value);
        return this;
    }

    @Override
    public InvoiceRecord values(Integer value1, LocalDateTime value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InvoiceRecord
     */
    public InvoiceRecord() {
        super(Invoice.INVOICE);
    }

    /**
     * Create a detached, initialised InvoiceRecord
     */
    public InvoiceRecord(Integer num, LocalDateTime creationDate, Long organizationInn) {
        super(Invoice.INVOICE);

        setNum(num);
        setCreationDate(creationDate);
        setOrganizationInn(organizationInn);
    }

    /**
     * Create a detached, initialised InvoiceRecord
     */
    public InvoiceRecord(generated.tables.pojos.Invoice value) {
        super(Invoice.INVOICE);

        if (value != null) {
            setNum(value.getNum());
            setCreationDate(value.getCreationDate());
            setOrganizationInn(value.getOrganizationInn());
        }
    }
}
